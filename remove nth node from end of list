/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int lengthlink(ListNode* head) {
        int count=0;
        ListNode* temp=head;
        while(temp!=NULL){
            count+=1;
            temp=temp->next;
        }
        return count;
    
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int length_link=lengthlink(head),counter=1;
        ListNode* prev=NULL;
        ListNode* curr=NULL;
        n=length_link+1-n;
        // cout << n << endl;
        // return NULL;
        if(head->next==NULL)
        {
            delete(head);
            return NULL;
        }

        else{
            curr=head;
            prev=NULL;
            while(counter<n){
                prev=curr;
                curr=curr->next;
                counter++;
            }
            if(prev!=NULL){
                prev->next=curr->next;
                delete(curr);
                return head;
            }
            else
            {
                prev=curr;
                prev=prev->next;
                delete(curr);
                return prev;
            }
            
        }
        
    }
    
};